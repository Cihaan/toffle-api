generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model movie {
  idmovie      Int        @id @default(autoincrement())
  title        String     @db.VarChar(50)
  poster_path  String     @db.VarChar(150)
  release_date DateTime?  @db.Date
  duration     Int?
  overview     String?    @db.VarChar(250)
  added_date   DateTime?  @db.Timestamp(6)
  vote_average Decimal?   @db.Decimal
  person_vote  Decimal?   @db.Decimal
  to_watch     to_watch[]
  watched      watched[]
}

model person {
  id         Int        @id @default(autoincrement())
  username   String     @unique @db.VarChar(50)
  email      String     @unique @db.VarChar(60)
  password   String     @db.VarChar(200)
  created_on DateTime   @db.Date
  to_watch   to_watch[]
  watched    watched[]
}

model show {
  idshow            Int        @id @default(autoincrement())
  title             String     @db.VarChar(50)
  poster_path       String     @db.VarChar(150)
  number_of_season  Int?
  number_of_episode Int?
  release_date      DateTime?  @db.Date
  duration          Int?
  overview          String?    @db.VarChar(250)
  added_date        DateTime?  @db.Timestamp(6)
  vote_average      Decimal?   @db.Decimal
  person_vote       Decimal?   @db.Decimal
  to_watch          to_watch[]
  watched           watched[]
}

model to_watch {
  idtowatch Int     @id @default(autoincrement())
  idperson  Int?
  idmovie   Int?
  idshow    Int?
  movie     movie?  @relation(fields: [idmovie], references: [idmovie], onDelete: NoAction, onUpdate: NoAction, map: "fk_movie")
  person    person? @relation(fields: [idperson], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_person")
  show      show?   @relation(fields: [idshow], references: [idshow], onDelete: NoAction, onUpdate: NoAction, map: "fk_show")
}

model watched {
  idwatched Int     @id @default(autoincrement())
  idperson  Int?
  idmovie   Int?
  idshow    Int?
  movie     movie?  @relation(fields: [idmovie], references: [idmovie], onDelete: NoAction, onUpdate: NoAction, map: "fk_movie")
  person    person? @relation(fields: [idperson], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_person")
  show      show?   @relation(fields: [idshow], references: [idshow], onDelete: NoAction, onUpdate: NoAction, map: "fk_show")
}
